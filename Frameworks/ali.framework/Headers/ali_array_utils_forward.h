#pragma once
#include "ali/ali_integer.h"
#include "ali/ali_wchar.h"

namespace ali
{

// ******************************************************************
struct is_internal_element_result;
// ******************************************************************

// ******************************************************************
struct is_internal_pointer_result;
// ******************************************************************

// ******************************************************************
template <typename T, typename D> struct exposes_array_const_ref;
// ******************************************************************

// ******************************************************************
template <typename D>
using exposes_blob_const_ref = exposes_array_const_ref<ali::uint8, D>;
// ******************************************************************

// ******************************************************************
template <typename D>
using exposes_string_const_ref = exposes_array_const_ref<char, D>;
// ******************************************************************

// ******************************************************************
template <typename D>
using exposes_wstring_const_ref = exposes_array_const_ref<ali::wchar, D>;
// ******************************************************************

// ******************************************************************
template <typename T, typename D> struct exposes_array_ref;
// ******************************************************************
//  ...and also array_const_ref.
// ******************************************************************

// ******************************************************************
template <typename D>
using exposes_blob_ref = exposes_array_ref<ali::uint8, D>;
// ******************************************************************
//  ...and also blob_const_ref.
// ******************************************************************

// ******************************************************************
template <typename D>
using exposes_string_ref = exposes_array_ref<char, D>;
// ******************************************************************
//  ...and also string_const_ref.
// ******************************************************************

// ******************************************************************
template <typename D>
using exposes_wstring_ref = exposes_array_ref<ali::wchar, D>;
// ******************************************************************
//  ...and also wstring_const_ref.
// ******************************************************************

// ******************************************************************
template <typename T> class array_const_ref_common;
// ******************************************************************

// ******************************************************************
template <typename T> class array_const_ref;
// ******************************************************************

// ******************************************************************
template <> class array_const_ref<ali::uint8>;
// ******************************************************************

// ******************************************************************
using blob_const_ref = array_const_ref<ali::uint8>;
// ******************************************************************

// ******************************************************************
template <> class array_const_ref<char>;
// ******************************************************************

// ******************************************************************
using string_const_ref = array_const_ref<char>;
// ******************************************************************

// ******************************************************************
template <> class array_const_ref<ali::wchar>;
// ******************************************************************

// ******************************************************************
using wstring_const_ref = array_const_ref<ali::wchar>;
// ******************************************************************

// ******************************************************************
template <typename T> class array_ref_common;
// ******************************************************************

// ******************************************************************
template <typename T> class array_ref;
// ******************************************************************

// ******************************************************************
template <> class array_ref<ali::uint8>;
// ******************************************************************

// ******************************************************************
using blob_ref = array_ref<ali::uint8>;
// ******************************************************************

// ******************************************************************
template <> class array_ref<char>;
// ******************************************************************

// ******************************************************************
using string_ref = array_ref<char>;
// ******************************************************************

// ******************************************************************
template <> class array_ref<ali::wchar>;
// ******************************************************************

// ******************************************************************
using wstring_ref = array_ref<ali::wchar>;
// ******************************************************************

// ******************************************************************
class c_string_const_ref;
// ******************************************************************

// ******************************************************************
class string_literal;
// ******************************************************************

// ******************************************************************
class string_literal_ptr;
// ******************************************************************

// ******************************************************************
class c_wstring_const_ref;
// ******************************************************************

// ******************************************************************
class wstring_literal;
// ******************************************************************

// ******************************************************************
class wstring_literal_ptr;
// ******************************************************************

// ******************************************************************
template <typename T> class array_const_ptr;
// ******************************************************************

// ******************************************************************
using blob_const_ptr = array_const_ptr<ali::uint8>;
// ******************************************************************

// ******************************************************************
template <> class array_const_ptr<char>;
// ******************************************************************

// ******************************************************************
using string_const_ptr = array_const_ptr<char>;
// ******************************************************************

// ******************************************************************
template <> class array_const_ptr<ali::wchar>;
// ******************************************************************

// ******************************************************************
using wstring_const_ptr = array_const_ptr<ali::wchar>;
// ******************************************************************

// ******************************************************************
template <typename T> class array_ptr;
// ******************************************************************

// ******************************************************************
using blob_ptr = array_ptr<ali::uint8>;
// ******************************************************************

// ******************************************************************
using string_ptr = array_ptr<char>;
// ******************************************************************

// ******************************************************************
using wstring_ptr = array_ptr<ali::wchar>;
// ******************************************************************

// ******************************************************************
class c_string_const_ptr;
// ******************************************************************

// ******************************************************************
class c_wstring_const_ptr;
// ******************************************************************

}   //  namespace ali
